program file2stringlist;

{ Small tool that reads a text file and creates a FreePascal unit that populates
  a stringlist with the file contents.
  Useful to avoid having resources in your programs.

  Copyright (c) 2012 Reinier Olislagers

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to
  deal in the Software without restriction, including without limitation the
  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
  sell copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  IN THE SOFTWARE.
}


{$mode objfpc}{$H+}
{$apptype console}

uses
  {$IFDEF UNIX}{$IFDEF UseCThreads}
  cthreads,
  {$ENDIF}{$ENDIF}
  Classes, sysutils;
const
  StringListName='TheStrings';
var
  Source: string;
  Target: string;
  Contents: TStringList;
  FunctionName: string;
  i: integer;
begin
  if Paramcount<1 then
  begin
    writeln('Please specify source filename as the first argument.');
    writeln('Optional: target filename');
    writeln('Default: sourcefilename.inc');
    halt(2);
  end;
  Source:=paramstr(1);
  if Paramcount>1 then
    Target:=ParamStr(2)
  else
    Target:=ChangeFileExt(Source,'.inc');
  FunctionName:=lowercase(ChangeFileExt(Source,''))+'strings';
  Contents:=TStringList.Create;
  try
    Contents.LoadFromFile(Source);
    // Double up quotes
    Contents.Text:=StringReplace(Contents.Text,'''','''''',[rfReplaceAll]);
    for i:=0 to Contents.Count-1 do
    begin
      Contents[i]:='  '+StringListName+'.Add('''+Contents[i]+''');';
    end;
    // Header and footer
    contents.Insert(0,'begin');
    contents.Insert(0,'procedure '+FunctionName+'(var '+StringListName+': TStringList);');
    Contents.Insert(0,'// Generated by file2stringlist from '+ExtractFileName(Source));

    contents.Add('end;');


    Contents.SaveToFile(Target);
  finally
    Contents.Free;
  end;
end.

